/*如果一个变量是基本类型
	比如 int hp = 50;
	我们就直接管hp叫变量
	=表示赋值的意思。
	如果一个变量是类类型
	比如 Hero h = new Hero();
	我们就管h叫做引用。
	=不再是赋值的意思
	=表示指向的意思
*/


/*1. 属性通常使用private封装起来
2. 方法一般使用public用于被调用
3. 会被子类继承的方法，通常使用protected
4. package用的不多，一般新手会用package,因为还不知道有修饰符这个东西

再就是作用范围最小原则
简单说，能用private就用private，不行就放大一级，用package,
再不行就用protected，最后用public。 
这样就能把数据尽量的封装起来，没有必要露出来的，就不用露出来了 
*/


/*
 当一个属性被static修饰的时候，就叫做类属性，又叫做静态属性
当一个属性被声明成类属性，那么所有的对象，都共享一个值
与对象属性对比：
不同对象的 对象属性 的值都可能不一样。
比如盖伦的hp 和 提莫的hp 是不一样的。
但是所有对象的类属性的值，都是一样的 

只要有一个对象对类属性进行了修改，其它对象的类属性也会跟着变化
*/

/*
 访问类属性有两种方式
1. 对象.类属性
 
teemo.copyright
 

2. 类.类属性
 
Hero.copyright
这两种方式都可以访问类属性，访问即修改和获取
但是建议使用第二种 类.类属性 的方式进行，
这样更符合语义上的理解 
 */

/*如果一个属性，每个英雄都不一样，比如name，
 这样的属性就应该设计为对象属性，因为它是跟着对象走的
 每个对象的name都是不同的

如果一个属性，所有的英雄都共享，都是一样的，
那么就应该设计为类属性。
比如血量上限，所有的英雄的血量上限都是 9999，
不会因为英雄不同，而取不同的值。
 这样的属性，就适合设计为类属性 
 */
 
/*类方法： 又叫做静态方法

对象方法： 又叫实例方法，非静态方法

访问一个对象方法，必须建立在有一个对象的前提的基础上
访问类方法，不需要对象的存在，直接就访问 

静态方法不能调用非静态方法，而非静态方法可以调用静态方法
*/
